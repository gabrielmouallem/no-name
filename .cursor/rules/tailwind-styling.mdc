---
globs: *.tsx,*.jsx,*.css
description: Tailwind CSS styling standards and best practices
---

# Tailwind CSS Guidelines

## Styling Approach

- Use Tailwind CSS utility classes for all styling
- Tailwind CSS v4 is configured in this project
- Follow Tailwind's responsive design patterns
- Use Tailwind's dark mode utilities

## Responsive Design

```typescript
// Use responsive prefixes: sm:, md:, lg:, xl:, 2xl:
<div className="text-sm md:text-base lg:text-lg">Responsive text</div>
```

## Dark Mode

```typescript
// Use dark: prefix for dark mode styles
<div className="bg-white dark:bg-gray-900 text-black dark:text-white">
  Dark mode support
</div>
```

## Best Practices

- Keep className attributes readable
- Break into multiple lines if className gets too long
- Use consistent spacing and ordering of utilities
- Avoid inline styles unless absolutely necessary
- Use CSS variables for theme values when needed

## Don't Do

- Don't use inline styles instead of Tailwind classes
- Don't create custom CSS unless Tailwind can't achieve the design
- Don't mix utility classes with custom CSS unnecessarily

## Example

```typescript
// Good: Clean, readable, responsive
<button
  className="
  rounded-full border border-solid border-transparent 
  transition-colors flex items-center justify-center 
  bg-foreground text-background gap-2 
  hover:bg-[#383838] dark:hover:bg-[#ccc] 
  font-medium text-sm sm:text-base 
  h-10 sm:h-12 px-4 sm:px-5
"
>
  Click me
</button>
```
